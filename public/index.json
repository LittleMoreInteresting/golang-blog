[
{
	"uri": "http://blog.911015.com/beginner/01.html",
	"title": "01-Golang安装与体验",
	"tags": null,
	"description": "",
	"content": " 下载并安装按照一下步骤快速进行。 有关安装的其他内容，您可能对以下内容感兴趣：\nGo多版本安装管理 \u0026ndash;如何安装多版本并卸载。 Go 源码安装 \u0026ndash; 如何下载源码并在自己的机器上编译安装Go。 下载地址在这里 go.dev/dl/ 各系统版本都有，下载一个与自己系统匹配的版本，可以选最新版本进行安装学习。\n安装Go 选择下面对应的计算机操作系统，然后按照其安装说明进行操作。\nLinux 删除/usr/local/Go文件夹（如果存在），删除以前的Go安装，然后将刚下载的存档提取到/usr/local中，在/usr/local/go: Copy\rrm -rf /usr/local/go \u0026amp;\u0026amp; tar -C /usr/local -xzf go1.20.4.linux-amd64.tar.gz （您可能需要以root用户身份或通过sudo运行该命令）。不要将归档文件解压缩到现有的/usr/local/go目录中。这会导致Go安装失败\n将/usr/local/go/bin添加到PATH环境变量中 您可以通过将以内容添加到$HOME/.profile或/etc/profile（全局安装）来完成此操作：\nCopy\rexport PATH=$PATH:/usr/local/go/bin **注意**：对配置文件所做的更改可能要等到下次登录计算机时才能应用。要立即应用更改，只需直接运行shell命令，或者使用`source $HOME/.profile` 等命令从概要文件中执行这些命令。\r3. 通过打开命令提示符并输入以下命令来验证是否已安装Go\rCopy\r$ go version 4. 确认该命令打印已安装的Go版本。\rMac 打开下载的软件包文件，并按照提示安装Go 该软件包将Go安装到/usr/local/go。该包应该将/usr/local/go/bin目录放在PATH环境变量中。可能需要重新启动任何打开的终端会话才能使更改生效。\n通过打开命令提示符并键入以下命令来验证是否已安装Go go version\n确认该命令打印已安装的Go版本。 Window 1、打开您下载的MSI文件，并按照提示安装Go。 默认情况下，安装程序将安装Go到 Program Files或Program Files（x86）。您可以根据需要更改位置。安装后，您需要关闭并重新打开任何打开的命令提示符，以便在命令提示符下反映安装程序对环境所做的更改。\n2、验证您是否已安装Go；\n在Windows中，单击“开始”菜单。 在菜单的搜索框中，键入cmd，然后按Enter键。 在出现的“命令提示符”窗口中，键入以下命令： go version 确认该命令打印已安装的Go版本。 Reference Installing Go "
},
{
	"uri": "http://blog.911015.com/beginner/02.html",
	"title": "01-新手入门",
	"tags": null,
	"description": "",
	"content": " 在本教程中，您将获得Go编程的简要介绍\n安装Go . 写一些简单的 \u0026ldquo;Hello, world\u0026rdquo; . 使用go命令运行代码. 使用Go程序包发现工具查找可以在自己的代码中使用的程序包. 调用外部模块的功能. 前期准备 一些编程经验。 这里的代码非常简单，但了解一些函数相关的知识会有所帮助。. 用于编辑代码的工具。** ** 任何文本编辑器都可以。大多数文本编辑器都很好地支持Go。最受欢迎的是VSCode（免费）、GoLand（付费）和Vim（免费）。 一个命令终端. Go在Linux和Mac上以及Windows中的PowerShell或cmd上使用任何终端都能很好地工作。 Hello World 按一下步骤写一段 “Hello World”代码\n1、打开一个命令提示符并cd到您的主目录。 Linux/Mac 系统执行 : cd Window系统执行： cd %HOMEPATH%\n2、为您的第一个Go源代码创建一个hello目录 可以使用一下命令：\nmkdir hello cd hello 3、为代码启用依赖管理\n当您的代码导入其他项目中的包（package）时，您可以通过自己的代码来管理这些模块的依赖关系。该模块由go.mod文件定义，通过该文件追踪提供包的这些模块。该go.mod文件与您的代码一起保存，包括在您的源代码存储库中。\r要通过创建go.mod文件为代码启用依赖管理，请运行go mod init+模块的名称 命令。该名称是模块的模块路径。\r在实际开发中，模块路径通常是保存源代码的存储仓库位置。例如，模块路径可能是github.com/mymodule。如果您计划发布您的模块供他人使用，则模块路径必须是Go工具可以下载您的模块的位置。\r对于本教程，只需使用example/hello。\ngo mod init example/hello go: creating new go.mod: module example/hello 4、在编辑器中，创建一个文件hello.go，在其中编写代码。 5、将以下代码粘贴到hello.go文件中并保存该文件。\npackage main import ( \u0026#34;fmt\u0026#34; ) func main() { fmt.Println(\u0026#34;Hello World（^-^）\u0026#34;) } 接下来看一下这段代码的内容：\n声明一个主包(main)（包是对函数进行分组的一种方式，它由同一目录中的所有文件组成）。 导入流行的fmt包，其中包含格式化文本的功能，包括打印到控制台。这个包是Go的标准库之一。 实现一个主要功能，将消息打印到控制台。当您运行主程序包时，默认情况下会执行一个主函数（main）。 6、运行代码\ngo run . # Hello World（^-^） 7、go run命令是众多go命令之一。使用 go help 命令可以查看其他命令帮助文档：\n调用外部包 当你需要你的代码来做一些可能已经被其他人实现的事情时，你可以导入一个实现了这些功能的包直接使用。\n1、使用外部模块的功能，使打印的消息更加有趣\r访问pkg.go.dev并搜索“quote”包 在搜索结果中找到并单击rsc.io/quote包（如果您看到rsc.io/quote/v3，请暂时忽略它）。 在“文档”部分的“索引”下，记下可以从代码中调用的函数列表。您将使用Go功能。 请注意，在本页顶部，\u0026ldquo;quote\u0026quot;包含在rsc.io/quote模块中。 您可以使用pkg.go.dev网站查找已发布的模块，这些模块的包中有您可以在自己的代码中使用的功能。包发布在模块中，比如rsc.io/quote，其他人可以在其中使用它们。随着时间的推移，新版本会对模块进行改进，您可以升级代码以使用改进的版本。\r2、在Go代码中，导入rsc.io/quote包并调用其函数 quote.Go()。之后，您的代码应该包括以下内容：\rpackage main import \u0026#34;fmt\u0026#34; import \u0026#34;rsc.io/quote\u0026#34; func main() { fmt.Println(quote.Go()) } 3、添加模块依赖和校验 Go程序把“quote”包添加到依赖中（go.mod），以及用于验证模块的go.sum文件中。\n$ go mod tidy go: finding module for package rsc.io/quote go: found rsc.io/quote in rsc.io/quote v1.5.2 4、运行您的代码以查看您正在调用的函数生成的消息。\n$ go run . # Don\u0026#39;t communicate by sharing memory, share memory by communicating. 请注意，您的代码调用Go函数，打印出一条关于通信的格言。\n当您运行go mod tidy，它找到并下载了包含您导入的包的rsc.io/quote模块。默认情况下，它下载了最新版本v1.5.2。\n"
},
{
	"uri": "http://blog.911015.com/",
	"title": "Go语言入门",
	"tags": null,
	"description": "Go语言入门",
	"content": "\r《Go语言入门》 整理了从零开始学习Go语言的相关基础知识；\r跟着Go用户手册入门Golang "
},
{
	"uri": "http://blog.911015.com/beginner/",
	"title": "跟着Go用户手册入门Golang",
	"tags": null,
	"description": "Go编程语言是一个开源项目，旨在提高程序员的工作效率。",
	"content": "\r文档简介\rGo编程语言是一个开源项目，旨在提高程序员的工作效率。\nGo表现力强、简洁、干净、高效。它的并发机制使编写程序变得容易，从而最大限度地利用多核和网络机器，而它的新型系统则实现了灵活和模块化的程序构建。Go可以快速编译为机器代码，但同时具有垃圾收集的便利性和运行时反射的功能。这是一种快速、静态类型化、编译的语言，感觉就像是一种动态类型化、解释的语言。\nGolang官方文档地址为：go.dev/doc ；文档开始简单介绍了Golang 的语言特性：简洁、高效、天然并发、快速编译、垃圾回收、反射，新类型系统等等。接下来分按入门，进阶、高级划分了大模块让初学者能够寻寻渐进的深入学习理解Golang；接下来我们将根据 Getting Started部门一步一步入门Golang。\n教程列表 说明 安装Golang 有关下载和安装Go的说明。 快速入门 一个简短的Hello，World入门教程。了解一些Go代码、工具、包和模块。 使用Go Module 介绍函数、错误处理、数组、映射、单元测试和编译的简短主题教程。 使用工作空间 介绍在Go中创建和使用多模块工作区的基本知识。多模块工作空间对于跨多个模块进行更改非常有用。（Go 1.18增加了工作空间模式，本地做多版本管理很方便） 用Go和Gin开发RESTful API 介绍使用Go和Gin web Framework编写RESTful web服务API的基础知识。 使用Go泛型 使用泛型，您可以声明和使用函数或类型，这些函数或类型是为与调用代码提供的任何一组类型一起工作而编写的。(Go 1.18 Go语言增加泛型) 使用fuzzing模糊测试 fuzzing可以为您的测试生成输入，这些输入可以捕捉到您可能错过的边缘案例和安全问题。（模糊测试是一种通过向目标系统提供非预期的输入并监视异常结果来发现软件漏洞的方法。） 编写Web应用程序 构建一个简单的web应用程序。 如何编写Go代码 本文档解释了如何在模块中开发一组简单的Go包，并展示了如何使用Go命令来构建和测试包。 Go之旅 Go语言的互动介绍分为三个部分。第一部分介绍了基本语法和数据结构；第二部分讨论了方法和接口；第三部分介绍了Go的并发原语。每一节都以一些练习作为结束，这样你就可以练习你所学到的东西。您可以在线参观，也可以使用以下软件在本地安装： go install golang.org/x/website/tour@latest这将把tour二进制文件放在GOPATH的bin目录中。 学习计划 阅读官方文档； 通过代码练习语法 通过项目熟悉代码 01-Golang安装与体验 01-新手入门 "
},
{
	"uri": "http://blog.911015.com/contact.html",
	"title": "与我联系",
	"tags": null,
	"description": "联系方式",
	"content": " Email： create98715@duck.com QQ： 3336449889 "
},
{
	"uri": "http://blog.911015.com/categories/",
	"title": "Categories",
	"tags": null,
	"description": "",
	"content": ""
},
{
	"uri": "http://blog.911015.com/tags/",
	"title": "Tags",
	"tags": null,
	"description": "",
	"content": ""
}]
